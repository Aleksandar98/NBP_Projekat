[{"F:\\VSProjects\\loto\\NBP_Projekat\\client\\src\\index.js":"1","F:\\VSProjects\\loto\\NBP_Projekat\\client\\src\\reportWebVitals.js":"2","F:\\VSProjects\\loto\\NBP_Projekat\\client\\src\\App.js":"3","F:\\VSProjects\\loto\\NBP_Projekat\\client\\src\\component\\Login.js":"4","F:\\VSProjects\\loto\\NBP_Projekat\\client\\src\\component\\Register.js":"5","F:\\VSProjects\\loto\\NBP_Projekat\\client\\src\\component\\Statistika.js":"6","F:\\VSProjects\\loto\\NBP_Projekat\\client\\src\\component\\Home.js":"7","F:\\VSProjects\\loto\\NBP_Projekat\\client\\src\\component\\Loto.js":"8","F:\\VSProjects\\loto\\NBP_Projekat\\client\\src\\component\\Countdown.js":"9","F:\\VSProjects\\loto\\NBP_Projekat\\client\\src\\component\\Drum.js":"10","F:\\VSProjects\\loto\\NBP_Projekat\\client\\src\\component\\BasicTable.js":"11"},{"size":494,"mtime":1612733213957,"results":"12","hashOfConfig":"13"},{"size":375,"mtime":1612733213958,"results":"14","hashOfConfig":"13"},{"size":844,"mtime":1612733213950,"results":"15","hashOfConfig":"13"},{"size":2226,"mtime":1612788800560,"results":"16","hashOfConfig":"13"},{"size":4807,"mtime":1612788664867,"results":"17","hashOfConfig":"13"},{"size":4391,"mtime":1612733213957,"results":"18","hashOfConfig":"13"},{"size":1167,"mtime":1612733213954,"results":"19","hashOfConfig":"13"},{"size":21078,"mtime":1612826976675,"results":"20","hashOfConfig":"13"},{"size":3927,"mtime":1612789207896,"results":"21","hashOfConfig":"13"},{"size":1985,"mtime":1612733213953,"results":"22","hashOfConfig":"13"},{"size":3942,"mtime":1612733213952,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1r9gdep",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"26"},"F:\\VSProjects\\loto\\NBP_Projekat\\client\\src\\index.js",[],["53","54"],"F:\\VSProjects\\loto\\NBP_Projekat\\client\\src\\reportWebVitals.js",[],"F:\\VSProjects\\loto\\NBP_Projekat\\client\\src\\App.js",[],"F:\\VSProjects\\loto\\NBP_Projekat\\client\\src\\component\\Login.js",["55","56"],"import React, { useState } from 'react';\r\nimport { Link, Redirect, useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\n\r\nconst Login = () => {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const history = useHistory();\r\n\r\n  const { email, password } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const zaSlanje = {\r\n      email,\r\n      password,\r\n    };\r\n    try {\r\n      const res = await axios.post(\"http://localhost:5000/provera\", zaSlanje);\r\n      console.log(res.data);\r\n      if(res.data==false){\r\n        swal(\"Greska\", \"Unesite validne podatke\", \"error\");\r\n        return;\r\n      }\r\n      localStorage.setItem(\"username\", res.data.username);\r\n      localStorage.setItem(\"kredit\", res.data.kredit);\r\n      localStorage.setItem(\"email\", res.data.email);\r\n      localStorage.setItem(\"password\", res.data.password);\r\n      history.push(\"/profile\");\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <section class='container1'>\r\n        <h1 class='large1 text-primary1'>Login</h1>\r\n        <p class='lead1'>\r\n          <i class='fas fa-user'></i> Prijavi se na svoj nalog\r\n        </p>\r\n        <form class='form1' onSubmit={onSubmit}>\r\n          <div class='form1-group'>\r\n            <input\r\n              type='email'\r\n              placeholder='Email Address'\r\n              name='email'\r\n              required\r\n              value={email}\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n          <div class='form1-group'>\r\n            <input\r\n              type='password'\r\n              placeholder='Password'\r\n              name='password'\r\n              required\r\n              value={password}\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n          <input type='submit' class='btn btn-primary' value='Login' />\r\n        </form>\r\n        <p class='my-1'>\r\n          Nemas nalog? <Link to='/register'>Registruj se</Link>\r\n        </p>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","F:\\VSProjects\\loto\\NBP_Projekat\\client\\src\\component\\Register.js",["57","58","59","60"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Register = () => {\r\n  const [formData, setFormData] = useState({\r\n    username: '',\r\n    email: '',\r\n    ime: '',\r\n    prezime: '',\r\n    racun: '',\r\n    mesto: '',\r\n    telefon: '',\r\n    password: '',\r\n    password2: '',\r\n  });\r\n\r\n  const {\r\n    username,\r\n    email,\r\n    ime,\r\n    prezime,\r\n    racun,\r\n    mesto,\r\n    telefon,\r\n    password,\r\n    password2,\r\n  } = formData;\r\n\r\n  const history = useHistory();\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  function allLetter(inputtxt) {\r\n    var letters = /^[a-z]+$/;\r\n    if (inputtxt.match(letters)) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (password !== password2) {\r\n      swal('Lozinke se ne poklapaju');\r\n    } else {\r\n      // if (!allLetter(username)) {\r\n      //   swal('Opseg vrednosti username-a mora biti: a-z');\r\n      //   return;\r\n      // }\r\n\r\n      swal('Uspesno ste registrovani', {\r\n        icon: 'success',\r\n      });\r\n\r\n      try {\r\n        const zaSlanje = {\r\n          username,\r\n          email,\r\n          ime,\r\n          prezime,\r\n          racun,\r\n          mesto,\r\n          telefon,\r\n          password,\r\n        };\r\n        console.log(zaSlanje);\r\n        const res = await axios.post(\r\n          'http://localhost:5000/createkorisnik',\r\n          zaSlanje\r\n        );\r\n        history.push('/login');\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='container'>\r\n      <form onSubmit={onSubmit} className='form'>\r\n        <h2>\r\n          Registracija <i className='fas fa-dice fa-fw'></i>\r\n        </h2>\r\n        {/* <div className='form-control'>\r\n          <label for='username'>Username</label>\r\n          <input\r\n            type='text'\r\n            placeholder='Unesi username'\r\n            name='username'\r\n            value={username}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div> */}\r\n        <div className='form-control'>\r\n          <label for='email'>Email</label>\r\n          <input\r\n            type='text'\r\n            placeholder='Unesi email'\r\n            name='email'\r\n            value={email}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-control'>\r\n          <label for='ime'>Ime</label>\r\n          <input\r\n            type='text'\r\n            placeholder='Unesi ime'\r\n            name='ime'\r\n            value={ime}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-control'>\r\n          <label for='prezime'>Prezime</label>\r\n          <input\r\n            type='text'\r\n            placeholder='Unesi prezime'\r\n            name='prezime'\r\n            value={prezime}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-control'>\r\n          <label for='racun'>Racun</label>\r\n          <input\r\n            type='text'\r\n            placeholder='Unesi racun'\r\n            name='racun'\r\n            value={racun}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-control'>\r\n          <label for='mesto'>Mesto</label>\r\n          <input\r\n            type='text'\r\n            placeholder='Unesi mesto'\r\n            name='mesto'\r\n            value={mesto}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-control'>\r\n          <label for='telefon'>Telefon</label>\r\n          <input\r\n            type='text'\r\n            placeholder='Unesi telefon'\r\n            name='telefon'\r\n            value={telefon}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-control'>\r\n          <label for='password'>Password</label>\r\n          <input\r\n            type='password'\r\n            placeholder='Unesi password'\r\n            name='password'\r\n            value={password}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-control'>\r\n          <label for='password2'>Potvrdi password</label>\r\n          <input\r\n            type='password'\r\n            placeholder='Unesi password opet'\r\n            name='password2'\r\n            value={password2}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        <button>Registruj se</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","F:\\VSProjects\\loto\\NBP_Projekat\\client\\src\\component\\Statistika.js",["61"],"import * as React from 'react';\r\nimport {\r\n  Chart,\r\n  ArgumentAxis,\r\n  ValueAxis,\r\n  AreaSeries,\r\n  Title,\r\n  Legend,\r\n} from '@devexpress/dx-react-chart-bootstrap4';\r\nimport { ArgumentScale, Animation } from '@devexpress/dx-react-chart';\r\nimport { curveCatmullRom, area } from 'd3-shape';\r\nimport { scalePoint } from 'd3-scale';\r\nimport axios from 'axios';\r\n\r\nlet data = [\r\n  { kolo: \"1\", novac_koji_firma_primi: 1000, isplate_korisnicima: 1500 },\r\n  { kolo: \"2\", novac_koji_firma_primi: 4200, isplate_korisnicima: 1100 },\r\n  { kolo: \"3\", novac_koji_firma_primi: 5354, isplate_korisnicima: 1200 },\r\n  { kolo: \"4\", novac_koji_firma_primi: 3900, isplate_korisnicima: 1150 },\r\n  { kolo: \"5\", novac_koji_firma_primi: 9105, isplate_korisnicima: 2500 },\r\n  { kolo: \"6\", novac_koji_firma_primi: 4180, isplate_korisnicima: 2250 },\r\n  { kolo: \"7\", novac_koji_firma_primi: 8110, isplate_korisnicima: 1600 },\r\n  { kolo: \"8\", novac_koji_firma_primi: 2554, isplate_korisnicima: 2200 },\r\n  { kolo: \"9\", novac_koji_firma_primi: 888, isplate_korisnicima: 2560 },\r\n  // { kolo: \"10\", novac_koji_firma_primi: 14270, isplate_korisnicima: 1130 },\r\n];\r\n\r\nconst Root = (props) => <Legend.Root {...props} className='m-auto flex-row' />;\r\n\r\nconst Area = (props) => (\r\n  <AreaSeries.Path\r\n    {...props}\r\n    path={area()\r\n      .x(({ arg }) => arg)\r\n      .y1(({ val }) => val)\r\n      .y0(({ startVal }) => startVal)\r\n      .curve(curveCatmullRom)}\r\n  />\r\n);\r\n\r\nconst isplati = () => {\r\n  axios.post('/izvrsiIsplatu');\r\n}\r\n\r\nexport default class Statistika extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"http://localhost:5000/izracunajProfit\")\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          let podaci = [\r\n            {\r\n              kolo: \"1\",\r\n              novac_koji_firma_primi: 1000,\r\n              isplate_korisnicima: 1500,\r\n            },\r\n            {\r\n              kolo: \"2\",\r\n              novac_koji_firma_primi: 4200,\r\n              isplate_korisnicima: 1100,\r\n            },\r\n            {\r\n              kolo: \"3\",\r\n              novac_koji_firma_primi: 5354,\r\n              isplate_korisnicima: 1200,\r\n            },\r\n            {\r\n              kolo: \"4\",\r\n              novac_koji_firma_primi: 3900,\r\n              isplate_korisnicima: 1150,\r\n            },\r\n            {\r\n              kolo: \"5\",\r\n              novac_koji_firma_primi: 9105,\r\n              isplate_korisnicima: 2500,\r\n            },\r\n            {\r\n              kolo: \"6\",\r\n              novac_koji_firma_primi: 4180,\r\n              isplate_korisnicima: 2250,\r\n            },\r\n            {\r\n              kolo: \"7\",\r\n              novac_koji_firma_primi: 8110,\r\n              isplate_korisnicima: 1600,\r\n            },\r\n            {\r\n              kolo: \"8\",\r\n              novac_koji_firma_primi: 2554,\r\n              isplate_korisnicima: 2200,\r\n            },\r\n            {\r\n              kolo: \"9\",\r\n              novac_koji_firma_primi: 888,\r\n              isplate_korisnicima: 2560,\r\n            },\r\n          ];\r\n          podaci.push({\r\n            kolo: \"10\",\r\n            novac_koji_firma_primi: result[0],\r\n            isplate_korisnicima: result[1],\r\n          });\r\n          this.setState({ data: podaci });\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    const { data: chartData } = this.state;\r\n\r\n    return (\r\n      <div className=\"card\">\r\n        <Chart data={chartData} className=\"pr-3\">\r\n          <ArgumentScale factory={scalePoint} />\r\n          <ArgumentAxis />\r\n          <ValueAxis />\r\n\r\n          <AreaSeries\r\n            name=\"Novac koji firma primi\"\r\n            valueField=\"novac_koji_firma_primi\"\r\n            argumentField=\"kolo\"\r\n            seriesComponent={Area}\r\n          />\r\n          <AreaSeries\r\n            name=\"Isplate korisnicima\"\r\n            valueField=\"isplate_korisnicima\"\r\n            argumentField=\"kolo\"\r\n            seriesComponent={Area}\r\n          />\r\n          <Animation />\r\n          <Legend position=\"bottom\" rootComponent={Root} />\r\n          <Title text=\"Profit firme Loto\" />\r\n          \r\n        </Chart>\r\n        <div onClick = {() => {isplati()}} id='isplata' className='btn btn-primary'>Isplati dobitke</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","F:\\VSProjects\\loto\\NBP_Projekat\\client\\src\\component\\Home.js",["62"],"import React from 'react';\r\nimport Countdown from './Countdown';\r\nimport Drum from './Drum';\r\nimport BasicTable from './BasicTable';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Home() {\r\n\r\n  //Istekao tajmer\r\n  const [count, setCount] = React.useState(0);\r\n  const increment = () => setCount((c) => (c = 1));\r\n\r\n  //Zavrsilo se izvlacenje\r\n  const [temp, setTemp] = React.useState(0);\r\n  const increment2 = () => setTemp((c) => (c = 1));\r\n\r\n  return (\r\n    <div className='App'>\r\n       <nav className='navbar navbar-dark bg-dark justify-content-between'>\r\n       \r\n        <a className='navbar-brand' href='#'>\r\n          Dobrodosli <i class='fas fa-dice fa-fw'></i>\r\n        </a>\r\n        <Link className='navbar-brand' to='/login'>\r\n          Login/Logout <i class='fas fa-sign-out-alt fa-fw'></i>\r\n        </Link>\r\n      </nav>\r\n      <h1>Sledece izvlacenje pocinje za:</h1>\r\n      <Countdown onIstekao={increment} />\r\n      {count === 1 && temp === 0 ? <Drum onZavrsio={increment2} /> : null}\r\n      {/* TREBA DA BUDE VIDLJIVO I PRE NEGO DA ISTEKNE ZBOG PROSLOG KOLA */}\r\n      {temp === 1 ? <BasicTable /> : null}\r\n    </div>\r\n  );\r\n}\r\n","F:\\VSProjects\\loto\\NBP_Projekat\\client\\src\\component\\Loto.js",["63","64","65","66","67","68","69","70"],"F:\\VSProjects\\loto\\NBP_Projekat\\client\\src\\component\\Countdown.js",["71"],"import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport swal from 'sweetalert';\r\nclass Countdown extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      days: 0,\r\n      hours: 0,\r\n      min: 0,\r\n      sec: 0,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // update every second\r\n    fetch(\"http://localhost:5000/vratiPocetakKola\")\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          // this.setState({kombinacija: result})\r\n          console.log(result);\r\n          if(result==false){\r\n            swal(\"Trenutno sistem nije u funkciji, pokusajte uskoro ponovo!\");\r\n            return;\r\n          } \r\n          this.interval = setInterval(() => {\r\n            const date = this.calculateCountdown(result);\r\n            date ? this.setState(date) : this.stop();\r\n          }, 1000);\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          console.log(error);\r\n          /*this.setState({\r\n          isLoaded: true,\r\n          error\r\n        });\r\n        */\r\n        }\r\n      );\r\n  }\r\n\r\n  componentWillUnmount() { \r\n    this.stop();\r\n  }\r\n\r\n  calculateCountdown(endDate) {\r\n    let diff = (Date.parse(new Date(endDate)) - Date.parse(new Date())) / 1000;\r\n\r\n    // clear countdown when date is reached\r\n    if (diff <= 0) return false;\r\n\r\n    const timeLeft = {\r\n      years: 0,\r\n      days: 0,\r\n      hours: 0,\r\n      min: 0,\r\n      sec: 0,\r\n      millisec: 0,\r\n    };\r\n\r\n    // calculate time difference between now and expected date\r\n    if (diff >= 365.25 * 86400) {\r\n      // 365.25 * 24 * 60 * 60\r\n      timeLeft.years = Math.floor(diff / (365.25 * 86400));\r\n      diff -= timeLeft.years * 365.25 * 86400;\r\n    }\r\n    if (diff >= 86400) {\r\n      // 24 * 60 * 60\r\n      timeLeft.days = Math.floor(diff / 86400);\r\n      diff -= timeLeft.days * 86400;\r\n    }\r\n    if (diff >= 3600) {\r\n      // 60 * 60\r\n      timeLeft.hours = Math.floor(diff / 3600);\r\n      diff -= timeLeft.hours * 3600;\r\n    }\r\n    if (diff >= 60) {\r\n      timeLeft.min = Math.floor(diff / 60);\r\n      diff -= timeLeft.min * 60;\r\n    }\r\n    timeLeft.sec = diff;\r\n    console.log(\"KOLKO CEKAM\" + timeLeft.sec);\r\n    return timeLeft;\r\n  }\r\n\r\n  stop() {\r\n    clearInterval(this.interval);\r\n    //UPDEJTRUJ STATE DA PRIKAZE IZVLACENJE\r\n    this.props.onIstekao();\r\n    console.log(\"PRIKAZI IZVLACENJE\");\r\n  }\r\n\r\n  addLeadingZeros(value) {\r\n    value = String(value);\r\n    while (value.length < 2) {\r\n      value = \"0\" + value;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  render() {\r\n    const countDown = this.state;\r\n\r\n    return (\r\n      <div className=\"Countdown\">\r\n        <span className=\"Countdown-col\">\r\n          <span className=\"Countdown-col-element\">\r\n            <strong>{this.addLeadingZeros(countDown.days)}</strong>\r\n            <span>{countDown.days === 1 ? \"Day\" : \"Days\"}</span>\r\n          </span>\r\n        </span>\r\n\r\n        <span className=\"Countdown-col\">\r\n          <span className=\"Countdown-col-element\">\r\n            <strong>{this.addLeadingZeros(countDown.hours)}</strong>\r\n            <span>Hours</span>\r\n          </span>\r\n        </span>\r\n\r\n        <span className=\"Countdown-col\">\r\n          <span className=\"Countdown-col-element\">\r\n            <strong>{this.addLeadingZeros(countDown.min)}</strong>\r\n            <span>Min</span>\r\n          </span>\r\n        </span>\r\n\r\n        <span className=\"Countdown-col\">\r\n          <span className=\"Countdown-col-element\">\r\n            <strong>{this.addLeadingZeros(countDown.sec)}</strong>\r\n            <span>Sec</span>\r\n          </span>\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCountdown.propTypes = {\r\n  date: PropTypes.string.isRequired,\r\n};\r\n\r\nCountdown.defaultProps = {\r\n  date: new Date(),\r\n};\r\n\r\nexport default Countdown;\r\n","F:\\VSProjects\\loto\\NBP_Projekat\\client\\src\\component\\Drum.js",[],"F:\\VSProjects\\loto\\NBP_Projekat\\client\\src\\component\\BasicTable.js",["72"],"import React, { Component, Fragment } from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Blink from 'react-blink-text';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\nlet rows = [];\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nclass BasicTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { izvlacenja: [] , kombinacija:[] };\r\n  }\r\n\r\n  createData(brPogodaka, brDobitnika) {\r\n    return { brPogodaka, brDobitnika };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"http://localhost:5000/vratiDobitke\")\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          for (let i = 0; i < 5; i++) {\r\n            rows.push(this.createData(7 - i, result[i]));\r\n          }\r\n          this.setState({ izvlacenja: rows });\r\n          console.log(rows);\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          console.log(error);\r\n          /*this.setState({\r\n          isLoaded: true,\r\n          error\r\n        });\r\n        */\r\n        }\r\n      );\r\n\r\n      fetch('http://localhost:5000/vratiKombinaciju')\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({ kombinacija: result });\r\n          console.log(result);\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          console.log(error);\r\n          /*this.setState({\r\n          isLoaded: true,\r\n          error\r\n        });\r\n        */\r\n        }\r\n      );\r\n  }\r\n\r\n  popunitabelu() {}\r\n\r\n  vratiSredjenNiz(){\r\n    \r\n     var niz = this.state.kombinacija;\r\n     var sredjenNiz ='';\r\n      for(var i=0;i<7;i++){\r\n        sredjenNiz+= \" \"+niz[i]\r\n      }\r\n      return sredjenNiz\r\n  }\r\n\r\n  render() {\r\n    const classes = this.props.classes;\r\n    this.popunitabelu();\r\n    return (\r\n      <Fragment>\r\n        <h1>Rezultati prethodnog kola</h1>\r\n        \r\n        <h3>Dobtina kombinacija : <Blink color='red' text={this.vratiSredjenNiz()} fontSize='30'>\r\n          \r\n        </Blink> </h3>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <StyledTableRow>\r\n              <StyledTableCell>Broj pogodaka</StyledTableCell>\r\n              <StyledTableCell>Broj dobitnika</StyledTableCell>\r\n            </StyledTableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row) => (\r\n              <TableRow key={row.brPogodaka}>\r\n                <StyledTableCell component=\"th\" scope=\"row\">\r\n                  {row.brPogodaka}\r\n                </StyledTableCell>\r\n\r\n                <StyledTableCell>{row.brDobitnika}</StyledTableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default () => {\r\n  const classes = useStyles();\r\n  return <BasicTable classes={classes} />;\r\n};\r\n",{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":2,"column":16,"nodeType":"79","messageId":"80","endLine":2,"endColumn":24},{"ruleId":"81","severity":1,"message":"82","line":28,"column":18,"nodeType":"83","messageId":"84","endLine":28,"endColumn":20},{"ruleId":"77","severity":1,"message":"85","line":1,"column":17,"nodeType":"79","messageId":"80","endLine":1,"endColumn":25},{"ruleId":"77","severity":1,"message":"86","line":1,"column":37,"nodeType":"79","messageId":"80","endLine":1,"endColumn":46},{"ruleId":"77","severity":1,"message":"87","line":36,"column":12,"nodeType":"79","messageId":"80","endLine":36,"endColumn":21},{"ruleId":"77","severity":1,"message":"88","line":71,"column":15,"nodeType":"79","messageId":"80","endLine":71,"endColumn":18},{"ruleId":"77","severity":1,"message":"89","line":15,"column":5,"nodeType":"79","messageId":"80","endLine":15,"endColumn":9},{"ruleId":"90","severity":1,"message":"91","line":21,"column":9,"nodeType":"92","endLine":21,"endColumn":46},{"ruleId":"77","severity":1,"message":"86","line":2,"column":37,"nodeType":"79","messageId":"80","endLine":2,"endColumn":46},{"ruleId":"77","severity":1,"message":"78","line":7,"column":16,"nodeType":"79","messageId":"80","endLine":7,"endColumn":24},{"ruleId":"81","severity":1,"message":"82","line":29,"column":31,"nodeType":"83","messageId":"84","endLine":29,"endColumn":33},{"ruleId":"81","severity":1,"message":"82","line":34,"column":33,"nodeType":"83","messageId":"84","endLine":34,"endColumn":35},{"ruleId":"77","severity":1,"message":"88","line":84,"column":17,"nodeType":"79","messageId":"80","endLine":84,"endColumn":20},{"ruleId":"81","severity":1,"message":"82","line":119,"column":33,"nodeType":"83","messageId":"84","endLine":119,"endColumn":35},{"ruleId":"90","severity":1,"message":"91","line":202,"column":9,"nodeType":"92","endLine":202,"endColumn":46},{"ruleId":"90","severity":1,"message":"91","line":205,"column":9,"nodeType":"92","endLine":205,"endColumn":46},{"ruleId":"81","severity":1,"message":"82","line":24,"column":20,"nodeType":"83","messageId":"84","endLine":24,"endColumn":22},{"ruleId":"93","severity":1,"message":"94","line":139,"column":1,"nodeType":"95","endLine":142,"endColumn":3},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Fragment' is defined but never used.","'useEffect' is defined but never used.","'allLetter' is defined but never used.","'res' is assigned a value but never used.","'data' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]